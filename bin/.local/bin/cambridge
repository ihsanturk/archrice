#!/bin/sh
#
# Created: 2020 Feb 05 11:00:--
# Updated: 2020 Feb 10 00:16:46 
#

url='https://dictionary.cambridge.org/auth/info?type=ENTRY_TRANSLATE&v3=turkish&v1=english&v2='
cachedir=${HOME}/.cache/cambridge
while read args; do
	if ! [ "$args" = "" ]; then
		phrase=$(echo $args | sed 's/ /+/g' | tr '[:upper:]' '[:lower:]');
		cache=$cachedir/$phrase.json;
		[ -f $cache ] ||
			curl -so $cache -H'Accept: application/json' ${url}${phrase} &&
		cat $cache | jq -r '.translatePanelDefaultEntry.entryLeft' |
		sed 's/\&hellip;$//;s/null//;s/, /|/g' | tr '|' '\n'
	fi
done # TODO If there is at least one argument then get that instead of stdin.

#==============================================================================

# # Funcs
# flatten() { 
	# [ "$1" = "" ] &&
		# sed '/^\s*$/d' | tr -d '\n' | fold -sw 40 ||
		# sed '/^\s*$/d' | sed "N;s/\n/$1/" | tr '\n' " " | fold -sw 40;
# }

# # Vars
# [ "$1" = "" ] && exit 2;
# url="https://dictionary.cambridge.org/dictionary/english/$(echo $1 | tr ' ' '-')"
# dir=${HOME}/.cache/cambridge
# file=$dir/$(echo $1 | tr ' ' '-').html

# # Preparing the environment
# mkdir -p $dir

# # Selectors
# # phrase='.di-title text{}' # DONE
# phrase='.headword text{}' # DONE
# type_='.posgram text{}' # DONE
# pronunciation='.uk .ipa.dipa.lpr-2.lpl-1 text{}' #TODO utf-8 problem
# definition='body > div:nth-child(1) > div.pos-body > div.pr.dsense.dsense-noh > div.sense-body.dsense_b > div:nth-child(1) > div.ddef_h > div text{}' # TODO Get one uniq definition.
# level='.epp-xref.dxref text{}' #DONE

# # Request
# if ! [ -f $file ]; then
	# curl -s $url -H 'Accept-Encoding: br, deflate' |
		# pup '.entry-body__el' > $file || exit 2;
# fi

# # Result
# if [ "$(cat $file)" = "" ]; then  
	# >&2 echo "$0: no such phrase in cambridge dictionary";
	# exit 2;
# else
	# ## Level
	# tput dim;
	# cat $file | pup -p $level | grep -o '[A-z0-9]\+' | sort|uniq | flatten ' ';
	# tput sgr0;
	
	# ## Phrase
	# tput bold; tput setaf 2;
	# cat $file | pup -p $phrase | grep -o '[A-z]\+' | sort|uniq | flatten ', ';
	# tput sgr0;
	
	# # Pronunciation
	# tput setaf 3;
	# cat $file | pup -p $pronunciation | sort|uniq | flatten;
	# tput sgr0;
	
	# ## Type
	# printf ' ';
	# tput dim;
	# cat $file | pup -p $type_ | grep -o '[A-z]\+' | sed '/^.$/d' | sort|uniq |
		# flatten ', ';
	# tput sgr0; echo;
	
	# ## Definition
	# echo
	# cat $file | pup $definition | grep -o "[A-z'\"]\+" | tr '\n' ' ' | flatten;
	# echo;
# fi
