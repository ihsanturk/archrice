"           ╭──────────────────────fast-vimrc─────────────────────╮
"           Maintainer:     ihsan, ihsanl[at]pm[dot]me            │
"           Description:    fast vim configuration                │
"           Last Change:    2020 Jul 26 14:06:31 +03, @1595761595 │
"           First Appeared: 2020 Jul 26 13:49:31                  │
"           License:        MIT                                   │
"           ╰─────────────────────────────────────────────────────╯

" auto install vim-plug
if empty(glob('~/.config/nvim/autoload/plug.vim'))
	silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall
endif
nm <m-p><m-i> :so $MYVIMRC<cr>:PlugInstall<cr>
nm <m-p><m-c> :so $MYVIMRC<cr>:PlugClean<cr>
nm <m-p><m-u> :so $MYVIMRC<cr>:PlugUpdate<cr>
nm <m-p><m-g> :PlugUpgrade<cr>
let g:plug_window = 'enew'

cal plug#begin('~/.config/nvim/plugged')

" TODO: dip THIS or make it blazing fast.
Plug 'ihsanturk/neuron.vim', { 'branch': 'dev' }
nm <m-z> <Plug>EditZettelSelect
let g:style_virtual_title = 'Comment'
let g:zkdir = $HOME.'/Dropbox/zettelkasten/'

Plug 'mkitt/tabline.vim'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'wellle/targets.vim'
Plug 'tpope/vim-commentary'
Plug 'ihsanturk/vim-emacs-like'
Plug 'ihsanturk/vim-ihsensible'
Plug 'LnL7/vim-nix', { 'for': 'nix' }
Plug 'ihsanturk/vim-grave-navigation'
Plug 'ollykel/v-vim', { 'for': 'vlang' }

Plug 'mhinz/vim-sayonara', { 'on': 'Sayonara' }
nm <m-k> :Sayonara!<cr>

Plug 'junegunn/limelight.vim'
let g:limelight_default_coefficient = 0.8
nm <m-l> :Limelight!!<cr>
xm <m-l> <Plug>(Limelight)

let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1
Plug 'Raimondi/delimitMate'

Plug 'reedes/vim-wheel'
let g:wheel#map#down = '<c-j>'
let g:wheel#map#up   = '<c-k>'

Plug 'https://gitlab.com/code-stats/code-stats-vim.git'
let g:codestats_api_key = $CODESTATS_API_KEY

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
nm <m-f> :Files<cr>
nm <m-s> :BLines<cr>
nm <m-b> :Buffers<cr>
nm <m-r> :History<cr>
nm <m-x> :Commands<cr>
nm <m-h> :Helptags!<cr>
tma <m-r> <c-\><c-n>:History<cr>
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-l> <plug>(fzf-complete-buffer-line)
nm <silent> <m-2> :call fzf#run({'sink': 'e', 'left': '30%'})<cr>
let g:fzf_commands_expect = 'alt-enter'
let g:fzf_colors = {
	\ 'fg':      ['fg', 'Normal'],
	\ 'bg':      ['bg', 'Normal'],
	\ 'hl':      ['fg', 'Comment'],
	\ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
	\ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
	\ 'hl+':     ['fg', 'Statement'],
	\ 'info':    ['fg', 'PreProc'],
	\ 'border':  ['fg', 'Ignore'],
	\ 'prompt':  ['fg', 'Conditional'],
	\ 'pointer': ['fg', 'Exception'],
	\ 'marker':  ['fg', 'Keyword'],
	\ 'spinner': ['fg', 'Label'],
	\ 'header':  ['fg', 'Comment']
\}

" appearance
Plug 'morhetz/gruvbox'
let g:gruvbox_italic = 1
let g:gruvbox_termcolors=16
let g:gruvbox_invert_selection = 0
let g:gruvbox_contrast_dark = 'medium'

cal plug#end()

" appearance
color gruvbox
hi ErrorMsg ctermfg=Red ctermbg=237

" sort text-objects " TODO: pluginize-vip
nm <silent> gss :set ep=sort<cr>=
nm <silent> gsr :set ep=sort\ -R<cr>=
nm <silent> gsl :set ep=sortlength<cr>=
xn <silent> gss :<C-U>set ep=sort<cr>gv=
xn <silent> gsr :<C-U>set ep=sort\ -R<cr>gv=
xn <silent> gsl :<C-U>set ep=sortlength<cr>gv=
" ---
nm <leader>g :set ep=gt<cr>=
xn <leader>g :<C-U>set ep=gt<cr>gv=
xn <leader>w :!xargs wikipedia 2>/dev/null<cr>
nm <leader>w :exe '!wikipedia '.expand('<cword>')<cr>
" xn <leader>s :!sozlukgovtr<cr>
" nn <leader>s :exe '!sozlukgovtr '.expand('<cword>')<cr>

"abbrv
ia	teh	the
if exists("*strftime")
	ia	timestamp	<c-r>=strftime('%s')<cr>
	ia	today	<c-r>=strftime("%Y %b %d")<cr>
	ia	now	<c-r>=strftime('%Y %b %d %X')<cr>
end

" copy pwd
command! Cpwd let @* = expand("%:p:h")
cabbrev cpwd Cpwd

" vim: set filetype=vim :
